@{
    #=========================================
    # --- uninstall.ps1 Strings ---
    #=========================================
    Uninstall_ElevationWarning = "Privilege elevation failed. Please run this script as an administrator."
    Uninstall_PressEnterToExit = "Press Enter to exit."
    Uninstall_StartMessage = "Starting full uninstallation of WindowsOrchestrator..."
    Uninstall_AutoLogonQuestion = "[QUESTION] WindowsOrchestrator may have enabled automatic login (auto-logon). Do you want to disable it now? (y/n)"
    Uninstall_RestoringSettings = "Restoring main Windows settings..."
    Uninstall_WindowsUpdateReactivated = "- Windows Updates (Update & Auto-Reboot): Reactivated."
    Uninstall_WindowsUpdateError = "- ERROR reactivating Windows Update: {0}"
    Uninstall_FastStartupReactivated = "- Fast Startup: Reactivated (default value)."
    Uninstall_FastStartupError = "- ERROR reactivating Fast Startup: {0}"
    Uninstall_OneDriveReactivated = "- OneDrive: Reactivated (blocking policy removed)."
    Uninstall_OneDriveError = "- ERROR reactivating OneDrive: {0}"
    Uninstall_AutoLogonDisabled = "- Automatic Login (Auto-Logon): Disabled (user's choice)."
    Uninstall_AutoLogonDisableError = "- ERROR disabling Auto-Logon: {0}"
    Uninstall_AutoLogonLeftAsIs = "- Automatic Login (Auto-Logon): Left as is (user's choice)."
    Uninstall_DeletingScheduledTasks = "Deleting scheduled tasks..."
    Uninstall_ProcessingTask = "Processing task '{0}'..."
    Uninstall_TaskFoundAttemptingDeletion = " Found. Attempting deletion..."
    Uninstall_TaskSuccessfullyRemoved = " Successfully removed."
    Uninstall_TaskDeletionFailed = " DELETION FAILED."
    Uninstall_TaskDeletionError = " ERROR during deletion."
    Uninstall_TaskErrorDetail = "   Detail: {0}"
    Uninstall_TaskNotFound = " Not found."
    Uninstall_CompletionMessage = "Uninstallation complete."
    Uninstall_TasksNotRemovedWarning = "Some tasks could NOT be removed: {0}."
    Uninstall_CheckTaskScheduler = "Please check Task Scheduler."
    Uninstall_FilesNotDeletedNote = "Note: Scripts and configuration files are not deleted from your disk."
    Uninstall_PressEnterToClose = "Press Enter to close this window."

    #=========================================
    # --- install.ps1 Strings ---
    #=========================================
    Install_ElevationWarning = "Privilege elevation failed. Please run this script as an administrator."
    Install_PressEnterToExit = "Press Enter to exit."
    Install_ConfigIniNotFoundWarning = "config.ini not found in the presumed parent directory ({0})."
    Install_ProjectRootPrompt = "Please enter the full path to the root directory of the WindowsOrchestrator scripts (e.g., C:\WindowsOrchestrator)"
    Install_InvalidProjectRootError = "Invalid project root directory or config.ini not found: '{0}'"
    Install_PathDeterminationError = "Error determining initial paths: {0}"
    Install_MissingSystemFile = "Required system file missing: {0}"
    Install_MissingUserFile = "Required user file missing: {0}"
    Install_MissingFilesAborted = "Main script files are missing in '{0}'. Installation aborted. Press Enter to exit."
    Install_ProjectRootUsed = "Project root directory used: {0}"
    Install_UserTaskTarget = "The user task will be installed for: {0}"
    Install_StartConfiguringTasks = "Starting scheduled task configuration..."
    Install_CreatingSystemTask = "Creating/Updating system task '{0}'..."
    Install_SystemTaskDescription = "WindowsOrchestrator: Executes the system configuration script at startup."
    Install_SystemTaskConfiguredSuccess = "Task '{0}' configured successfully."
    Install_CreatingUserTask = "Creating/Updating user task '{0}' for '{1}'..."
    Install_UserTaskDescription = "WindowsOrchestrator: Executes the user configuration script at logon."
    Install_MainTasksConfigured = "Main scheduled tasks configured."
    Install_DailyRebootTasksNote = "Tasks for daily reboot ('AllSys_SystemScheduledReboot') and pre-reboot action ('AllSys_SystemPreRebootAction') will be created/managed by '{0}' during its execution."
    Install_AttemptingInitialLaunch = "Attempting initial launch of configuration scripts..."
    Install_ExecutingSystemScript = "Executing config_systeme.ps1 to apply initial system configurations..."
    Install_SystemScriptSuccess = "config_systeme.ps1 executed successfully (exit code 0)."
    Install_SystemScriptWarning = "config_systeme.ps1 finished with exit code: {0}. Check logs in '{1}\Logs'."
    Install_SystemScriptError = "Error during initial execution of config_systeme.ps1: {0}"
    Install_Trace = "Trace: {0}"
    Install_ExecutingUserScript = "Executing config_utilisateur.ps1 for '{0}' to apply initial user configurations..."
    Install_UserScriptSuccess = "config_utilisateur.ps1 executed successfully for '{0}' (exit code 0)."
    Install_UserScriptWarning = "config_utilisateur.ps1 for '{0}' finished with exit code: {1}. Check logs in '{2}\Logs'."
    Install_UserScriptError = "Error during initial execution of config_utilisateur.ps1 for '{0}': {1}"
    Install_InstallationCompleteSuccess = "Installation and initial launch complete!"
    Install_InstallationCompleteWithErrors = "Installation finished with errors during initial script launch. Check messages above."
    Install_CriticalErrorDuringInstallation = "A critical error occurred during installation: {0}"
    Install_PressEnterToClose = "Press Enter to close this window."

    #=========================================
    # --- firstconfig.ps1 Strings ---
    #=========================================
    ConfigForm_Title = "Configuration Wizard - WindowsOrchestrator"
    ConfigForm_PathError = "Could not determine project paths. Error: {0}. The script will close."
    ConfigForm_PathErrorCaption = "Critical Path Error"
    ConfigForm_ModelFileNotFoundError = "ERROR: The template file 'management\defaults\default_config.ini' is not found AND no 'config.ini' exists. Installation is impossible."
    ConfigForm_ModelFileNotFoundCaption = "Template File Missing"
    ConfigForm_CopyError = "Could not create 'config.ini' file from template. Error: {0}."
    ConfigForm_CopyErrorCaption = "Copy Error"
    ConfigForm_OverwritePrompt = @"
A 'config.ini' configuration file already exists.

Do you want to replace it with the default template?

WARNING: Your current settings will be lost.
"@
    ConfigForm_OverwriteCaption = "Replace existing configuration?"
    ConfigForm_ResetSuccess = "The 'config.ini' file has been reset to default values."
    ConfigForm_ResetSuccessCaption = "Reset Successful"
    ConfigForm_OverwriteError = "Could not replace 'config.ini' with the template. Error: {0}."
    ConfigForm_SaveSuccessMessage = "Configuration saved to {0}"
    ConfigForm_SaveSuccessCaption = "Success"
    ConfigForm_AutoLoginUsernameLabel = "Auto-Login Username (optional):"
    ConfigForm_DisableFastStartupCheckbox = "Disable Fast Startup (recommended)"
    ConfigForm_DisableSleepCheckbox = "Disable machine sleep"
    ConfigForm_DisableScreenSleepCheckbox = "Disable screen sleep"
    ConfigForm_EnableAutoLoginCheckbox = "Enable Auto-Login management (via script)"
    ConfigForm_DisableWindowsUpdateCheckbox = "Disable Windows Updates (via script)"
    ConfigForm_DisableAutoRebootCheckbox = "Prevent WU from auto-rebooting (if session active)"
    ConfigForm_DisableOneDriveCheckbox = "Disable OneDrive (system policy)"
    ConfigForm_PreRebootActionTimeLabel = "Pre-Reboot Action Time (HH:MM):"
    ConfigForm_PreRebootActionCommandLabel = "Pre-Reboot Command (path):"
    ConfigForm_PreRebootActionArgumentsLabel = "Pre-Reboot Command Arguments:"
    ConfigForm_PreRebootActionLaunchMethodLabel = "Pre-Reboot Launch Method:"
    ConfigForm_ScheduledRebootTimeLabel = "Daily Reboot Time (HH:MM):"
    ConfigForm_ProcessNameLabel = "Application to Launch (ProcessName):"
    ConfigForm_ProcessArgumentsLabel = "Main Application Arguments:"
    ConfigForm_LaunchMethodLabel = "Main Application Launch Method:"
    ConfigForm_SaveButton = "Save and Close"
    ConfigForm_CancelButton = "Cancel"
    ConfigForm_InvalidTimeFormat = "Time format must be HH:MM (e.g., 03:55)."
    ConfigForm_InvalidTimeFormatCaption = "Invalid Format"
    ConfigForm_ConfigWizardCancelled = "Configuration wizard cancelled."
    
    #=========================================
    # --- config_systeme.ps1 & config_utilisateur.ps1 Shared Strings ---
    #=========================================
    Error_LanguageFileLoad = "A critical error occurred while loading language files: {0}"
    Error_InvalidConfigValue = "Invalid config value for [{0}]{1}: '{2}'. Expected type '{3}'. Default/empty value used."
    Log_CapturedError = "CAPTURED ERROR: {0}"
    Log_ScriptFinished = "{0} ({1}) finished."
    Log_ErrorsOccurred = "Errors occurred during execution."

    #=========================================
    # --- config_systeme.ps1 Strings ---
    #=========================================
    Log_StartingScript = "Starting {0} ({1})..."
    Log_CheckingNetwork = "Checking network connectivity..."
    Log_NetworkDetected = "Network connectivity detected."
    Log_NetworkRetry = "Network unavailable, retrying in 10s..."
    Log_NetworkFailed = "Network not established. Gotify may fail."
    Log_ExecutingSystemActions = "Executing configured SYSTEM actions..."
    Log_ReadRegistryForUser = "AutoLoginUsername not specified. Attempting to read DefaultUserName from Registry."
    Log_RegistryUserFound = "Using Registry DefaultUserName as target user: {0}."
    Log_RegistryUserNotFound = "Registry DefaultUserName not found or empty. No default target user."
    Log_RegistryReadError = "Error reading DefaultUserName from Registry: {0}"
    Log_ConfigUserFound = "Using AutoLoginUsername from config.ini as target user: {0}."
    Log_SettingNotSpecified = "Setting '{0}' not specified."
    Error_RegPathNotFound = "Registry path for Power settings not found: {0}"
    Log_DisablingFastStartup = "Cfg: Disabling FastStartup."
    Action_FastStartupDisabled = "FastStartup disabled."
    Error_DisableFastStartupFailed = "Failed to disable FastStartup: {0}"
    Log_FastStartupAlreadyDisabled = "FastStartup already disabled."
    Action_FastStartupVerifiedDisabled = "FastStartup verified (already disabled)."
    Log_EnablingFastStartup = "Cfg: Enabling FastStartup."
    Action_FastStartupEnabled = "FastStartup enabled."
    Error_EnableFastStartupFailed = "Failed to enable FastStartup: {0}"
    Log_FastStartupAlreadyEnabled = "FastStartup already enabled."
    Action_FastStartupVerifiedEnabled = "FastStartup verified (already enabled)."
    Log_DisablingSleep = "Disabling machine sleep..."
    Action_SleepDisabled = "Machine sleep (S3/S4) disabled."
    Error_DisableSleepFailed = "Failed to disable machine sleep: {0}"
    Log_DisablingScreenSleep = "Disabling screen sleep..."
    Action_ScreenSleepDisabled = "Screen sleep disabled."
    Error_DisableScreenSleepFailed = "Failed to disable screen sleep: {0}"
    Log_EnablingAutoLogin = "Verifying/Enabling AutoLogin..."
    Action_AutoAdminLogonEnabled = "AutoAdminLogon enabled."
    Action_DefaultUserNameSet = "DefaultUserName set to: {0}."
    Error_AutoLoginFailed = "Failed to configure AutoLogin: {0}"
    Log_AutoLoginUserUnknown = "EnableAutoLogin=true but target user could not be determined."
    Error_AutoLoginUserUnknown = "AutoLogin enabled but target user could not be determined."
    Log_DisablingAutoLogin = "Disabling AutoLogin..."
    Action_AutoAdminLogonDisabled = "AutoAdminLogon disabled."
    Error_DisableAutoLoginFailed = "Failed to disable AutoAdminLogon: {0}"
    Log_DisablingUpdates = "Disabling Win Updates..."
    Action_UpdatesDisabled = "Win Updates disabled."
    Log_EnablingUpdates = "Enabling Win Updates..."
    Action_UpdatesEnabled = "Win Updates enabled."
    Error_UpdateMgmtFailed = "Failed to manage Win Updates: {0}"
    Log_DisablingAutoReboot = "Disabling auto-reboot (WU)..."
    Action_AutoRebootDisabled = "Auto-reboot (WU) disabled."
    Error_DisableAutoRebootFailed = "Failed to disable auto-reboot: {0}"
    Log_ConfiguringReboot = "Configuring scheduled reboot at {0}..."
    Action_RebootScheduled = "Scheduled reboot at {0} (Task: {1})."
    Error_RebootScheduleFailed = "Failed to configure scheduled reboot ({0}) task '{1}': {2}."
    Log_RebootTaskRemoved = "ScheduledRebootTime not specified. Removing task '{0}'."
    Action_PreRebootConfigured = "Pre-reboot action at '{0}' configured (Task: {1})."
    Log_DisablingOneDrive = "Disabling OneDrive (policy)..."
    Action_OneDriveDisabled = "OneDrive disabled (policy)."
    Error_DisableOneDriveFailed = "Failed to disable OneDrive: {0}"
    Log_EnablingOneDrive = "Enabling/Maintaining OneDrive (policy)..."
    Action_OneDriveEnabled = "OneDrive allowed (policy)."
    Error_EnableOneDriveFailed = "Failed to enable OneDrive: {0}"
    Error_FatalScriptError = "FATAL SCRIPT ERROR (main block): {0} \n{1}"

    #=========================================
    # --- config_utilisateur.ps1 Strings ---
    #=========================================
    Log_User_CannotReadConfig = "Could not read or parse '{0}'. Halting user configurations."
    Log_User_StartingScript = "Starting {0} ({1}) for user '{2}'..."
    Log_User_ExecutingActions = "Executing configured actions for user '{0}'..."
    Log_User_ManagingProcess = "Managing user process (raw:'{0}', resolved:'{1}'). Method: {2}"
    Log_User_ProcessWithArgs = "With arguments: '{0}'"
    Log_User_BaseNameError = "Error extracting base name from '{0}' (direct)."
    Error_User_LaunchMethodUnknown = "LaunchMethod '{0}' not recognized. Options: direct, powershell, cmd."
    Error_User_InterpreterNotFound = "Interpreter '{0}' not found for LaunchMethod '{1}'."
    Log_User_WorkingDirFallback = "ProcessName '{0}' is not a file path; WorkingDir set to '{1}' for '{2}'."
    Log_User_WorkingDirNotFound = "Working directory '{0}' not found. WorkingDirectory will not be set."
    Log_User_EmptyBaseName = "Base name of process to monitor is empty."
    Log_User_ProcessStopping = "Process '{0}' (PID: {1}) is running. Stopping..."
    Action_User_ProcessStopped = "Process '{0}' stopped."
    Log_User_ProcessRestarting = "Restarting via {0}: '{1}' with args: '{2}'"
    Action_User_ProcessRestarted = "Process '{0}' restarted (via {1})."
    Log_User_ProcessStarting = "Process '{0}' not found. Starting via {1}: '{2}' with args: '{3}'"
    Action_User_ProcessStarted = "Process '{0}' started (via {1})."
    Error_User_ProcessManagementFailed = "Failed to manage process '{0}' (Method: {1}, Path: '{2}', Args: '{3}'): {4}. StackTrace: {5}"
    Error_User_ExeNotFound = "Executable file for ProcessName '{0}' (direct mode) NOT FOUND."
    Log_User_NoProcessSpecified = "No ProcessName specified in [Process] or raw path is empty."
    Error_User_FatalScriptError = "FATAL USER SCRIPT ERROR '{0}': {1} `n{2}"
    Error_User_VarExpansionFailed = "Error expanding variables for ProcessName '{0}': {1}"
    #=========================================
    # --- Gotify Notification Strings ---
    #=========================================
    Gotify_MessageDate = "On {0}."
    Gotify_SystemActionsHeader = "SYSTEM Actions:"
    Gotify_NoSystemActions = "No SYSTEM actions."
    Gotify_SystemErrorsHeader = "SYSTEM Errors:"
    Gotify_UserActionsHeader = "USER Actions:"
    Gotify_NoUserActions = "No USER actions."
    Gotify_UserErrorsHeader = "USER Errors:"
}